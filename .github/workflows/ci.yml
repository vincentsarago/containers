name: CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

jobs:
  postgis:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        postgres: [13, 14, 15]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        uses: docker/build-push-action@v2
        with:
          context: ./postgis
          file: ./postgis/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            POSTGRES_VERSION=${{ matrix.postgres }}
          tags: |
            ghcr.io/${{ github.actor }}/postgis:${{ matrix.postgres }}-3.3

      - name: Push images
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./postgis
          file: ./postgis/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            POSTGRES_VERSION=${{ matrix.postgres }}
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/postgis:${{ matrix.postgres }}-3.3

  gunicorn:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        uses: docker/build-push-action@v2
        with:
          context: ./uvicorn-gunicorn
          file: ./uvicorn-gunicorn/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
          tags: |
            ghcr.io/${{ github.actor }}/uvicorn-gunicorn:${{ matrix.python }}

      - name: Push images
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./uvicorn-gunicorn
          file: ./uvicorn-gunicorn/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/uvicorn-gunicorn:${{ matrix.python }}

  hypercorn:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build images
        uses: docker/build-push-action@v2
        with:
          context: ./hypercorn
          file: ./hypercorn/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
          tags: |
            ghcr.io/${{ github.actor }}/hypercorn:${{ matrix.python }}

      - name: Push images
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./hypercorn
          file: ./hypercorn/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/hypercorn:${{ matrix.python }}
